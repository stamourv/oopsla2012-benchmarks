#lang racket

(require racket/draw racket/class
         racket/contract unstable/latent-contract/defthing
         "private/flomap.rkt"
         "private/deep-flomap.rkt"
         "private/utils.rkt"
         "private/style.rkt")

(define lambda-path-commands
  '((m 8.5 1.5)
    (c -1.6356765828908555 0.029546719528023596
       -3.191760877876106 0.5981878749262537
       -4.720477489085545 1.1242189706194692)
    (c 0.6669351268436579 0.7142825307374631
       0.5663221427728614 0.9399074888495575
       0.8574087929203539 0.8856493838348083)
    (c 1.1139361982300886 -0.26979469970501474
       2.7661170029498527 -0.8976661899705014
       3.5022074713864306 0.2920653404129794)
    (c 1.604836361061947 2.027318824778761
       2.2854387162241885 4.621830343362832
       2.528554440117994 7.151444427138643)
    (c 0.3116530407079646 1.536908007079646
       -2.857777387610619 7.039676186430679
       -3.8315742017699113 9.23609637758112)
    (c -1.5828472448377582 2.792818935693215
       -2.9889992117994097 5.691217406489675
       -4.772427818289086 8.366316818879056)
    (c 0.42649146902654866 0.5644402784660767
       1.0427237946902654 0.34355411445427725
       1.6228086182890855 0.25676724483775815)
    (c 0.49529097817109147 -0.07420284601769911
       0.9905831646017699 -0.14840448377581122
       1.4858741427728612 -0.22260672566371684)
    (c 1.5973270277286136 -3.787185161061947
       3.3219870961651914 -7.263537085545722
       4.820870569911505 -11.091467780530973)
    (c 0.6830176660766961 -1.5775599008849557
       1.0166688849557521 -2.445292667846608
       1.8281710631268435 -3.4783485734513273)
    (c 0.9620301781710914 0.5885710348082596
       1.2484493215339232 2.040281637758112
       1.77328405899705 3.0419137321533922)
    (c 1.5467160542772862 3.979993184660766
       3.0867486206489674 7.962568420058997
       4.546565437168141 11.975105472566373)
    (c 0.3820927622418879 0.13305596224188793
       0.7742605970501475 0.5306156554572271
       1.1366913510324481 0.14744150088495575)
    (c 0.9533687693215339 -0.5878412460176992
       2.0633098572271384 -0.9560281486725664
       2.857080825958702 -1.7685525144542773)
    (c -0.2264924884955752 -1.0982469474926253
       -0.9541940106194691 -2.1254820625368733
       -1.3975098902654866 -3.181664056637168)
    (c -2.8100934230088495 -5.615961562241888
       -5.519535197640117 -11.572843233038348
       -7.278479027728613 -17.620018746902655)
    (c -0.6478138147492625 -1.9033066855457228
       -1.4455158560471977 -4.19687149120944
       -3.5071903339233037 -4.948212008023599)
    (c -0.46965654277286134 -0.13943394171091444
       -0.9645608778761062 -0.1662308436578171
       -1.451858010619469 -0.16614886324483774)))

(defproc (lambda-flomap [color (or/c string? (is-a?/c color%))]
                        [height (and/c rational? (>=/c 0)) (default-icon-height)]
                        [material deep-flomap-material-value? (default-icon-material)]) flomap?
  (make-cached-flomap
   [height color material]
   (draw-rendered-icon-flomap
    32 32 (Î» (dc)
            (set-icon-pen dc (icon-color->outline-color color) 4 'solid)
            (send dc set-brush (icon-color->outline-color color) 'solid)
            (draw-path-commands dc lambda-path-commands 4 0)
            (set-icon-pen dc color 2 'solid)
            (send dc set-brush color 'solid)
            (draw-path-commands dc lambda-path-commands 4 0))
    (/ height 32)
    material)))

;; ===================================================================================================
;; Bitmaps (icons)

(define-icon-wrappers
  ([color (or/c string? (is-a?/c color%))]
   [height (and/c rational? (>=/c 0)) (default-icon-height)]
   [material deep-flomap-material-value? (default-icon-material)])
  [lambda-icon lambda-flomap])


(void (time (lambda-icon "blue" 600)))
